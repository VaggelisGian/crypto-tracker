import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.FlowLayout;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import java.lang.Math;
import java.lang.StringBuffer;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;









/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author asus
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    public App() {
        initComponents();
        setTitle("Crypto View");
        //setSize(600, 600);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        jTable();
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(jTable1.getModel());
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    
    
    public void jTable() {
        final String url = "https://www.coingecko.com/";
        String columns [] = {"Coin","Price","1h%","1d%","7d%","24h Volume","Marketcap"};
        int rows = 100, column = 7;
        String data [][] = new String [rows][column];
        double datadouble [][] = new double [rows][column-3];
        long datalong [][] = new long [rows][column-5];
        
        try {
            final Document document = Jsoup.connect(url).get(); 
            int i=0;
            for (Element row : document.select("table.sort.table.mb-0.text-sm.text-lg-normal.table-scrollable tr"))
            {
                if (row.select("td:nth-of-type(3)").text().equals(""))
                {
                    continue;
                }
                else
                {
                    
                    String name = row.select("td:nth-of-type(3)").text();
                    String arr[] = name.split(" ", 2);
                    final String firstWord = arr[0];                                                    //gia ta prwta 10
                    
                    String tempPrice = row.select("td:nth-of-type(4)").text();
                    String tempPrice1 = tempPrice.replace(",","");            //alazw to , me .
                    final double price = Double.parseDouble(tempPrice1.substring(1)); //jepernaw to $
                    
                    String hour1 = row.select("td:nth-of-type(5)").text();
                    StringBuffer sb= new StringBuffer(hour1);  
                    sb.deleteCharAt(sb.length()-1);                                              //vagzw to %
                    String str = sb.toString();
                    final double hour = Double.parseDouble(str);
                    
                    String day1 = row.select("td:nth-of-type(6)").text();
                    StringBuffer sb1= new StringBuffer(day1);  
                    sb1.deleteCharAt(sb1.length()-1);
                    String str1 = sb1.toString();
                    final double day = Double.parseDouble(str1);
                    
                    String sevenDay1 = row.select("td:nth-of-type(7)").text();
                    StringBuffer sb2= new StringBuffer(sevenDay1);  
                    sb2.deleteCharAt(sb2.length()-1);
                    String str2 = sb2.toString();
                    final double sevenDay = Double.parseDouble(str2);
                    
                    String tempdayvolume = row.select("td:nth-of-type(8)").text();
                    String tempdayvolume1 = tempdayvolume.replace(",","");        //vgazw ola ta ,
                    double dayvolume1 = Double.parseDouble(tempdayvolume1.substring(1)); 
                    final long dayvolume = Math.round(dayvolume1);
                    
                    String tempmarcetCap = row.select("td:nth-of-type(9)").text();
                    String tempmarcetCap1 = tempmarcetCap.replaceAll(",",""); 
                    double marcetCap1 = Double.parseDouble(tempmarcetCap1.substring(1)); 
                    final long marcetCap = Math.round(marcetCap1);
                    
                    System.out.println(	"Coin"+" || "+"Price"+" || "+"1h%"+" || "+"1d%"+" || "+"7d%"+" || "+"24h Volume"+" || "+"Marketcap");
                    System.out.println(i+" "+firstWord+" || "+price+" || "+hour1+" || "+day1+" || "+sevenDay1+" || "+dayvolume+" || "+marcetCap);
                    System.out.println("---------------------------------------------------------------------");
                    
                    datadouble[i][0] = price; 
                    datadouble[i][1] = hour; 
                    datadouble[i][2] = day;         
                    datadouble[i][3] = sevenDay; 
                    datalong[i][0] = dayvolume; 
                    datalong[i][1] = marcetCap; 
                    
                        
                    data[i][0] = firstWord; 
                    data[i][1] = tempPrice; 
                    data[i][2] = hour1;         
                    data[i][3] = day1; 
                    data[i][4] = sevenDay1; 
                    data[i][5] = tempdayvolume; 
                    data[i][6] = tempmarcetCap; 
                    
                   
                    
                    for (int coll = 0; coll < 7; coll++)
                    {   
                        System.out.println("row:"+i+" coll: "+coll+" data "+"["+i+"]"+"["+coll+"]"+data [i][coll]);  
                    }
                    for (int coll = 0; coll < 4; coll++)
                    {   
                        System.out.println("row:"+i+" coll: "+coll+" data "+"["+i+"]"+"["+coll+"]"+datadouble [i][coll]);  
                    }
                    for (int coll = 0; coll < 2; coll++)
                    {   
                        System.out.println("row:"+i+" coll: "+coll+" data "+"["+i+"]"+"["+coll+"]"+datalong [i][coll]);  
                    }
                    
                    i++;    
                }      
            } 
            
        }catch (Exception ex) 
        {
            ex.printStackTrace();
        };   
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable1.setModel(model);

    }
    
    
    
       
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
            
            
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    
}
